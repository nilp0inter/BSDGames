# GNUmakefile - automatically generated by configure.  Do not edit.

# No suffix rules
.SUFFIXES:

# Include configuration
include Makeconfig

.PHONY:	all  hunt_hunt_all hunt_huntd_all hunt_all lib_all
all:	 hunt_hunt_all hunt_huntd_all hunt_all lib_all

# Include substitution rules.
include subst.rules

include hunt/hunt/Makefrag

hunt/hunt/%.o:	hunt/hunt/%.c
	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -c $< -o $@

hunt/hunt/%.i:	hunt/hunt/%.c
	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -E $< -o $@

hunt/hunt/%.s:	hunt/hunt/%.c
	$(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS) -S -fverbose-asm $< -o $@

hunt/hunt/%.d:	hunt/hunt/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_hunt_CFLAGS) $(hunt_hunt_DEFS) $(BASE_INCS) -Ihunt/hunt $(hunt_hunt_INCS)

include hunt/huntd/Makefrag

hunt/huntd/%.o:	hunt/huntd/%.c
	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -c $< -o $@

hunt/huntd/%.i:	hunt/huntd/%.c
	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -E $< -o $@

hunt/huntd/%.s:	hunt/huntd/%.c
	$(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS) -S -fverbose-asm $< -o $@

hunt/huntd/%.d:	hunt/huntd/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_huntd_CFLAGS) $(hunt_huntd_DEFS) $(BASE_INCS) -Ihunt/huntd $(hunt_huntd_INCS)

include hunt/Makefrag

hunt/%.o:	hunt/%.c
	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -c $< -o $@

hunt/%.i:	hunt/%.c
	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -E $< -o $@

hunt/%.s:	hunt/%.c
	$(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS) -S -fverbose-asm $< -o $@

hunt/%.d:	hunt/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(hunt_CFLAGS) $(hunt_DEFS) $(BASE_INCS) -Ihunt $(hunt_INCS)

include lib/Makefrag

lib/%.o:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -c $< -o $@

lib/%.i:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -E $< -o $@

lib/%.s:	lib/%.c
	$(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS) -S -fverbose-asm $< -o $@

lib/%.d:	lib/%.c
	./mkdep $< $@ $(CC) $(CFLAGS) $(lib_CFLAGS) $(lib_DEFS) $(BASE_INCS) -Ilib $(lib_INCS)

ifneq ($(nodep),true)
include  hunt/hunt/connect.d hunt/hunt/hunt.d hunt/hunt/otto.d hunt/hunt/playit.d hunt/huntd/pathname.d
endif

hunt/hunt/hunt:	 hunt/hunt/connect.o hunt/hunt/hunt.o hunt/hunt/otto.o hunt/hunt/playit.o hunt/huntd/pathname.o
	$(CC) $(LDFLAGS) $^ $(NCURSES_LIB) $(BASE_LIBS) -o $@

ifneq ($(nodep),true)
include  hunt/huntd/answer.d hunt/huntd/ctl.d hunt/huntd/ctl_transact.d hunt/huntd/draw.d hunt/huntd/driver.d hunt/huntd/execute.d hunt/huntd/expl.d hunt/huntd/extern.d hunt/huntd/faketalk.d hunt/huntd/get_names.d hunt/huntd/makemaze.d hunt/huntd/shots.d hunt/huntd/terminal.d
endif

hunt/huntd/huntd:	 hunt/huntd/answer.o hunt/huntd/ctl.o hunt/huntd/ctl_transact.o hunt/huntd/draw.o hunt/huntd/driver.o hunt/huntd/execute.o hunt/huntd/expl.o hunt/huntd/extern.o hunt/huntd/faketalk.o hunt/huntd/get_names.o hunt/huntd/makemaze.o hunt/huntd/pathname.o hunt/huntd/shots.o hunt/huntd/terminal.o
	$(CC) $(LDFLAGS) $^  $(BASE_LIBS) -o $@


.PHONY:	hunt_hunt_clean
hunt_hunt_clean:
	cd hunt/hunt && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  hunt $(hunt_hunt_CLEANFILES)

.PHONY:	hunt_hunt_install hunt_hunt_install-strip hunt_hunt_installdirs
hunt_hunt_install:	hunt_hunt_installdirs

hunt_hunt_install-strip:
	$(MAKE) hunt_hunt_install $(DEFS_TO_PASS_STRIP)

hunt_hunt_installdirs:
	set -e; for d in $(hunt_hunt_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	hunt_huntd_clean
hunt_huntd_clean:
	cd hunt/huntd && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  huntd $(hunt_huntd_CLEANFILES)

.PHONY:	hunt_huntd_install hunt_huntd_install-strip hunt_huntd_installdirs
hunt_huntd_install:	hunt_huntd_installdirs

hunt_huntd_install-strip:
	$(MAKE) hunt_huntd_install $(DEFS_TO_PASS_STRIP)

hunt_huntd_installdirs:
	set -e; for d in $(hunt_huntd_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	hunt_clean
hunt_clean:
	cd hunt && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(hunt_CLEANFILES)

.PHONY:	hunt_install hunt_install-strip hunt_installdirs
hunt_install:	hunt_installdirs

hunt_install-strip:
	$(MAKE) hunt_install $(DEFS_TO_PASS_STRIP)

hunt_installdirs:
	set -e; for d in $(hunt_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done



.PHONY:	lib_clean
lib_clean:
	cd lib && rm -f -- a.out core *.o *.d *.i *.s *.d.tmp  $(lib_CLEANFILES)

.PHONY:	lib_install lib_install-strip lib_installdirs
lib_install:	lib_installdirs

lib_install-strip:
	$(MAKE) lib_install $(DEFS_TO_PASS_STRIP)

lib_installdirs:
	set -e; for d in $(lib_DIRS) /; do mkdir -p $(INSTALL_PREFIX)$$d; done

.PHONY:	clean mostlyclean distclean maintainer-clean
clean mostlyclean:	 hunt_hunt_clean hunt_huntd_clean hunt_clean lib_clean

distclean maintainer-clean:	clean
	rm -f subst.sed subst.rules
	rm -f test.out
	rm -f `cat substfiles substfiles2 |sed '/^#/d'`
	rm -f GNUmakefile
	rm -f a.out conftest.c include/bsd-games.h
	rm -f exec.libs.tmp exec.objs.tmp

.PHONY:	install install-strip

install:	 hunt_hunt_install hunt_huntd_install hunt_install lib_install

install-strip:
	$(MAKE) install $(DEFS_TO_PASS_STRIP)

.PHONY: check test
check test:	all
	set -e; for f in tests/*.test; do echo $$f; $$f; done

# Standard GNU targets we don't support
.PHONY:	uninstall TAGS dist
uninstall TAGS dist:
	@echo "The GNU target \`$@' is not supported by this package." >&2; exit 1

# GNU targets that can do nothing
.PHONY:	info dvi
info dvi:
	@echo "This package comes with no Texinfo documentation."

